Multi Dimensional Array Questions:-
-----------------------------------

1. 
Input:-
3
1 2 3 
4 5 6
7 8 9
Output:-
0 (15-15) 
Reason:- Fwd and Reverse diagonal difference

#include<stdio.h>
int main()
{
	int n,a[10][10],i,j,fwds=0,revs=0;
	scanf("%d",&n);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			scanf("%d",&a[i][j]);
		}		
	}
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(i==j){
				fwds += a[i][j];
			}
			if(i+j == n-1){
				revs += a[i][j];
			}
		}
	}
	printf("%d",(fwds-revs));
	return 0;
}

2.
Input:-
4
1 2 3 4
11 23 11 2
31 12 13 14
5 6 7 8
Output:-
<2,2>
<1,3>
<2,2>
<2,2>
Reason:- Print the sum of even and odd count in each row
#include<stdio.h>
int main()
{
	int n,a[10][10],i,j,even,odd;
	scanf("%d",&n);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			scanf("%d",&a[i][j]);
		}		
	}
	for(i=0;i<n;i++){
		even = odd = 0;
		for(j=0;j<n;j++){
			if(a[i][j]%2==0){
				even++;
			}
			else{
				odd++;
			}
		}
		printf("<%d,%d>\n",even,odd);
	}
	return 0;
}

3. 
Input:-
4
1 2 3 4
5 6 7 8
1 2 3 4
5 6 7 8
Output:-
6 7
2 3
Reason:- The numbers which is not present on the edges of the grid
#include<stdio.h>
int main()
{
	int n,a[10][10],i,j;
	scanf("%d",&n);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			scanf("%d",&a[i][j]);
		}		
	}
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(i!=0 && j!=0 && i!=n-1 && j!= n-1)	
			{
				printf("%d ",a[i][j]);
			}
		}
		printf("\n");
	}
	return 0;
}

4
Input:-
4
9 5 6 7
1 5 8 1
4 6 7 2
9 8 7 6
Output:-9 8 7 9 -- Calculate the Large number in each row of given input grid 
#include<stdio.h>
int main()
{
	int n,a[10][10],i,j,large;
	scanf("%d",&n);
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			scanf("%d",&a[i][j]);
		}		
	}
	for(i=0;i<n;i++){
		large = a[i][0];
		for(j=0;j<n;j++){
			if(large<a[i][j])
			{
				large = a[i][j];
			}
		}
		printf("%d ",large);
	}
	return 0;
}
5.
Input:-
2 3
1 2 3
4 5 6
Output:-
* * * * *
* 1 2 3 *
* 4 5 6 *
* * * * *
Reason:- Enhance the rows and columns count
#include<stdio.h>
int main()
{
	int a[10][10],n,r,c,i,j;
	scanf("%d%d",&r,&c);
	for(i=1;i<=r;i++)
	{
		for(j=1;j<=c;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	for(i=0;i<=(r+1);i++)
	{
		for(j=0;j<=(c+1);j++)
		{
			if(i==0 || j == 0 || i == (r+1) || j == (c+1))
			{
				printf("* ");
			}
			else{
				printf("%d ",a[i][j]);
			}
		}
		printf("\n");
	}
	return 0;
}
6.
Input:-
5
Output:-
* * * * *
* * * * *
* * * * *
* * * * *
* * * * *
Reason:- Generate the prefect grid
#include<stdio.h>
int main()
{
	int n,i,j;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			printf("* ");
		}
		printf("\n");
	}
	return 0;
}
7.
Input:-
5
Output:-
* * * * *
* *   * *
*   *   *
* *   * *
* * * * *
8.
Input:-
n = 5

Output:-
1	2	3	4	5
16	17	18	19	6
15	24	25	20	7
14	23	22	21	8
13	12	11	10	9

9.
Example Input/Output 1:
Input:
4 4
18 5 5 21
23 24 1 25
8 5 15 17
23 4 29 2

Output:
45

Explanation:
The elements which are not present along the border are 24 1 5 15.
Hence the output is 24+1+5+15 = 45.

Example Input/Output 2:
Input:
5 6
93 60 84 26 22 95
99 96 86 90 34 0
0 83 63 10 74 75
36 35 98 4 22 18
20 8 27 94 64 30

Output:
695

#include<stdio.h>
int main()
{
	int n,i,j,sum=0,a[10][10],r,c;
	scanf("%d%d",&r,&c);
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			if(i!=0 && j!=0 && i!=r-1 && j!=c-1)
			{
				sum += a[i][j];
			}
		}
	}
	printf("%d",sum);
	return 0;
}
10.
The program must accept an integer matrix of size MxN as the input. The program must print the desired pattern
4 4
1 2 3 4
4 5 6 7
7 8 9 1
1 2 3 4

Test case 1:
k = 1
Output:-

5 6 7
8 9 1
2 3 4

Test case 2:
k = 2
Output:-
9 1
3 4

Test case 3:
k= 3
Output:-
4

Test case 4:
k = 4 / k = 5 / k = 100
Output:-
-1

#include<stdio.h>
int main()
{
	int a[10][10],r,c,k,i,j;
	scanf("%d%d",&r,&c);
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	scanf("%d",&k);
	for(i=k;i<r;i++)
	{
		for(j=k;j<c;j++)
		{
			printf("%d ",a[i][j]);
		}
		printf("\n");
	}
	return 0;
}

11.

Given input as n*n matrix and find the output in the following manner.

4 5 6 7
1 5 9 1
4 6 8 2
9 8 7 6

Output:-2 0 4 2 -- Calculate the Even numbers in each row of given input grid





